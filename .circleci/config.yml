---
version: 2.1

orbs:
  slack: circleci/slack@3.4.2

commands:
  activate_gcloud:
    steps:
      - run:
          name: Activate gcloud
          command: |
            git clone --depth=1 https://github.com/greenpeace/planet4-circleci.git
            ./planet4-circleci/src/bin/activate-gcloud-account.sh

jobs:
  lint:
    docker:
      - image: node:16
    environment:
      - NODE_ENV: "development"
    steps:
      - checkout
      - run:
          name: Lint
          command: |
            npm install
            npx eslint scripts

  unit-test:
    docker:
      - image: node:16
    environment:
      - NODE_ENV: "development"
    parameters:
      notify:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: Test
          command: |
            npm install
            npm test
      - run:
          name: Extract tests artifacts
          when: always
          command: |
            mkdir -p /tmp/artifacts/
            cp -r junit.xml /tmp/artifacts || true
      - store_test_results:
          path: /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-builds-ci
            - slack/status:
                fail_only: true
                channel: C024ZM2UB55
                webhook: ${SLACK_NRO_WEBHOOK}

  env-install:
    machine:
      image: ubuntu-2204:2023.02.1
    parameters:
      notify:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
              nvm install 16
      - run:
          name: Install environment
          environment:
              VERBOSE: true
          command: |
              echo '{"config": {"WP_DEBUG": false}}' | tee -a .wp-env.override.json
              nvm use
              npm install
              npm run env:requirements
              npm run env:install
              npm run elastic:activate
              npx wp-env run cli wp rewrite flush
      - run:
          name: E2E tests
          environment:
              CI:
              PW_RETRIES: 1
              PW_WORKERS: 3
              PW_TEST_HTML_REPORT_OPEN: "never"
          command: |
              echo -e "\n# Planet4 local development environment\n127.0.0.1\twww.planet4.test" | sudo tee -a /etc/hosts;
              nvm use
              npm run env:e2e-install -- --with-deps
              npm run env:e2e
      - run:
          name: Extract tests artifacts
          when: always
          command: |
            mkdir -p /home/circleci/artifacts/playwright/themes /home/circleci/artifacts/playwright/plugins
            cp -r planet4/themes/planet4-master-theme/e2e-* /home/circleci/artifacts/playwright/themes || true
            cp planet4/themes/planet4-master-theme/results.xml /home/circleci/artifacts/playwright/themes || true
            cp -r planet4/plugins/planet4-plugin-gutenberg-blocks/e2e-* /home/circleci/artifacts/playwright/plugins || true
            cp planet4/plugins/planet4-plugin-gutenberg-blocks/results.xml /home/circleci/artifacts/playwright/plugins || true
      - store_test_results:
          path: /home/circleci/artifacts
      - store_artifacts:
          path: /home/circleci/artifacts
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-builds-ci
            - slack/status:
                fail_only: true
                channel: C024ZM2UB55
                webhook: ${SLACK_NRO_WEBHOOK}

  nro-install:
    machine:
      image: ubuntu-2204:2023.02.1
    environment:
      - GOOGLE_PROJECT_ID: planet-4-151612
    parameters:
      notify:
        type: boolean
        default: false
    steps:
      - checkout
      - activate_gcloud
      - run:
          name: Install dependencies
          command: |
              nvm install 16
      - run:
          name: Install environment
          command: |
              nvm use
              npm install
              npm run env:requirements
              VERBOSE=true npm run nro:install peru
      - when:
          condition: << parameters.notify >>
          steps:
            # Notify p4-builds-ci
            - slack/status:
                fail_only: true
                channel: C024ZM2UB55
                webhook: ${SLACK_NRO_WEBHOOK}

workflows:
  main:
    jobs:
      - lint
      - unit-test
      - env-install
      - nro-install:
          context: org-global

  nightly-test:
    jobs:
      - unit-test:
          context: org-global
          notify: true
      - env-install:
          context: org-global
          notify: true
      - nro-install:
          context: org-global
          notify: true
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - main
